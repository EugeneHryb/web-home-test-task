{"version":3,"sources":["components/CommentForm/style/CommentForm.module.scss","components/Comment/style/Comment.module.scss","components/PaginationButom/style/PaginationButom.module.scss","components/CommentsList/style/CommentsList.module.scss","components/PopUp/styles/PopUp.module.scss","components/App/style/App.module.scss","components/Buttom/style/Buttom.module.scss","utils/dateToString.js","components/Comment/Comment.jsx","utils/textConverter.js","components/PaginationButom/PaginationButom.jsx","components/Buttom/Butom.jsx","API/API.js","components/PopUp/PopUp.jsx","components/CommentForm/CommentForm.jsx","components/CommentsList/CommentsList.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","dateToString","date","getDate","num","getMonth","toString","getFullYear","getHours","getMinutes","Comment","props","updatedTo","Date","updated_at","className","styles","container","name","comment","text","textConverter","str","replace","PaginationButom","wraper","active","href","button","onClick","e","preventDefault","isNaN","getPage","goToPage","label","Buttom","wrapper","buttom","type","buttomTypes","buttomOnclick","content","API","firstPage","sendComments","PopUp","bacground","close","message","CommentForm","useState","setComment","validateMessage","setValidateMessage","showMesage","setShowMesage","formHangler","a","hideNameValidate","hideTextValidate","closePopUp","length","setTimeout","fetch","method","body","JSON","stringify","headers","ok","resetPage","console","error","popUp","onSubmit","placeholder","onChange","target","value","warning","CommentsList","thisPage","setThisPage","activePage","setActivePage","coments","setComents","pageLinks","setPageLinks","loaderShowMore","setLoaderShowMore","showButton","setShowButton","nextPage","setNextPage","resetButton","data","last_page","current_page","updatePage","url","response","json","links","next_page_url","eror","showMore","concat","newPageLink","map","element","i","useEffect","listComents","coment","created_at","id","listPaginationButon","elem","more","App","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,eAAe,kCAAkC,QAAU,+B,kBCApHD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,2B,gBCA7HD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,OAAS,gCAAgC,MAAQ,+BAA+B,OAAS,kC,gBCApJD,EAAOC,QAAU,CAAC,OAAS,6BAA6B,kBAAkB,sCAAsC,KAAO,2BAA2B,eAAe,qC,gBCAjKD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,UAAY,yBAAyB,MAAQ,qBAAqB,QAAU,yB,kBCAnID,EAAOC,QAAU,CAAC,WAAa,wBAAwB,UAAY,yB,gBCAnED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,yB,kKCe9CC,MAff,SAAsBC,GAWlB,MAAM,GAAN,OAAUA,EAAKC,UAAf,aAVqBC,EAUmBF,EAAKG,YATzCD,GAAU,GAEH,GACK,IAAIA,EAELA,EAAIE,YAInB,YAA4DJ,EAAKK,cAAjE,YAAkFL,EAAKM,WAAvF,YAAqGN,EAAKO,cAV1G,IAAqBL,G,uBCiBVM,MAff,SAAiBC,GACb,IAAMC,EAAY,IAAIC,KAAKF,EAAMG,YAIjC,OACI,qBAAIC,UAAYC,IAAOC,UAAvB,UACI,oBAAIF,UAAaC,IAAOE,KAAxB,SAAgCP,EAAMO,OACtC,mBAAGH,UAAaC,IAAOG,QAAvB,SAAkCR,EAAMS,OACxC,uBAAML,UAAaC,IAAOd,KAA1B,sBAA2CD,EAAaW,UCJrDS,MATf,SAAuBC,GAKnB,OAFAA,GADAA,EAAMA,EAAIC,QAAQ,UAAU,SAClBA,QAAQ,UAAW,S,gBC0BlBC,MAzBf,SAAyBb,GAUrB,OACI,oBAAII,UAAWC,IAAOS,OAAQ,KAAQd,EAAMe,OAAUV,IAAOU,OAAS,IAAtE,SACI,mBAAGC,KAAK,IACJZ,UAAWC,IAAOY,OAClBC,QAbZ,SAAkBC,GACdA,EAAEC,iBAECC,MAAMrB,EAAMsB,UACXtB,EAAMuB,SAASvB,EAAMsB,UAOrB,SAII,sBAAMlB,UAAaC,IAAOmB,MAA1B,SACMd,EAAeV,EAAMwB,MAAM7B,mB,iBCRlC8B,MAVf,SAAgBzB,GACZ,OACI,qBAAKI,UAAWC,IAAOqB,QAAvB,SACI,wBAAQtB,UAAWC,IAAOsB,OAAQC,KAAM5B,EAAM6B,YAAaX,QAASlB,EAAM8B,cAA1E,SACK9B,EAAM+B,a,iBCFRC,EALH,CACRC,UAAW,sDACXC,aAAc,uD,wBCYHC,MAXf,SAAenC,GACX,OACI,qBAAKI,UAAaC,IAAO+B,UAAzB,SACI,sBAAKhC,UAAaC,IAAOC,UAAzB,UACI,mBAAGU,KAAK,IAAIZ,UAAaC,IAAOgC,MAAOnB,QAAWlB,EAAMqC,QACxD,mBAAGjC,UAAaC,IAAOiC,QAAvB,SAAiCtC,EAAMsC,gB,gBCkGxCC,MApGf,SAAqBvC,GAEjB,MAA8BwC,mBAAS,CAACjC,KAAM,GAAGE,KAAM,KAAvD,mBAAOD,EAAP,KAAgBiC,EAAhB,KACA,EAA8CD,mBAAS,CAACjC,MAAM,EAAOE,MAAM,IAA3E,mBAAOiC,EAAP,KAAwBC,EAAxB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAJuB,SAaRC,EAbQ,8EAavB,WAA2B3B,GAA3B,mBAAA4B,EAAA,kEAIiBC,EAAT,WACIL,EAAmB,2BAAID,GAAL,IAAsBnC,MAAM,MAGzC0C,EAAT,WACIN,EAAmB,2BAAID,GAAL,IAAsBjC,MAAM,MAGzCyC,EAAT,WACIL,GAAc,IAXlB1B,EAAEC,mBAcCZ,EAAQD,KAAK4C,OAAO,GAhB/B,iBAiBYR,EAAmB,2BAAID,GAAL,IAAsBnC,MAAM,KAC9C6C,WAAWJ,EAAkB,KAlBzC,6BAmBiBxC,EAAQC,KAAK0C,OAAO,GAnBrC,iBAoBYR,EAAmB,2BAAID,GAAL,IAAsBjC,MAAM,KAC9C2C,WAAWH,EAAkB,KArBzC,yCAuBmCI,MAAMrB,EAAIE,aAAc,CAC3CoB,OAAQ,OACRC,KAAMC,KAAKC,UAAUjD,GACrBkD,QAAS,CACL,eAAgB,sBA3BpC,eA+BwBC,KACR3D,EAAM4D,YACNnB,EAAW,CAAClC,KAAM,GAAGE,KAAM,KAC3BoC,GAAc,GACdO,WAAWF,EAAY,MAnCvC,0DA2CQW,QAAQC,MAAM,mCAAd,MA3CR,2DAbuB,sBA+DvB,IAAMC,EAAQ,cAAC,EAAD,CACNzB,QAAW,iBACXD,MA3DR,WACIQ,GAAc,MA6DlB,OACI,uBAAMmB,SAAYlB,EAAa1C,UAAWC,IAAOqB,QAAjD,UACI,sBAAKtB,UAAWC,IAAO,gBAAvB,UACI,uBACIuB,KAAK,OACLrB,KAAK,WACL0D,YAAc,YACdC,SAAY,SAAC/C,GAAD,OAAKsB,EAAW,2BAAIjC,GAAL,IAAcD,KAAMY,EAAEgD,OAAOC,UACxDA,MAAS5D,EAAQD,OAEnBmC,EAAgBnC,KAAM,sBAAMH,UAAaC,IAAOgE,QAA1B,iDAA+E,MAE3G,sBAAKjE,UAAaC,IAAO,gBAAzB,UACI,0BACIuB,KAAK,OACLrB,KAAK,UACL0D,YAAc,qBACdC,SAAY,SAAC/C,GAAD,OAAKsB,EAAW,2BAAIjC,GAAL,IAAcC,KAAMU,EAAEgD,OAAOC,UACxDA,MAAS5D,EAAQC,OAGnBiC,EAAgBjC,KAAM,sBAAML,UAAaC,IAAOgE,QAA1B,kDAAgF,MAG5G,cAAC,EAAD,CAAQxC,YAAe,SAAUC,cAAiBgB,EAAaf,QAAS,WAEvEa,EAAamB,EAAQ,OCkEnBO,MA9Jf,WAEI,MAAgC9B,mBAAS,IAAzC,mBAAO+B,EAAP,KAAiBC,EAAjB,KACA,EAAoChC,mBAAS,IAA7C,mBAAOiC,EAAP,KAAmBC,EAAnB,KACA,EAA8BlC,mBAAS,IAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAkCpC,mBAAS,IAA3C,mBAAOqC,EAAP,KAAkBC,EAAlB,KACA,EAA4CtC,oBAAS,GAArD,mBAAOuC,EAAP,KAAuBC,EAAvB,KACA,EAAoCxC,oBAAS,GAA7C,mBAAOyC,EAAP,KAAmBC,EAAnB,KACA,EAAgC1C,mBAAS,IAAzC,mBAAO2C,EAAP,KAAiBC,EAAjB,KAGA,SAASC,EAAYC,GACdA,EAAKC,WAAaD,EAAKE,aACtBN,GAAc,GAEdA,GAAc,GAfH,SAuBJO,EAvBI,8EAuBnB,WAA0BC,GAA1B,iBAAA3C,EAAA,sEAEQyB,EAAYkB,GAFpB,SAIgCrC,MAAMqC,EAAK,CAC/BpC,OAAQ,QALpB,YAIeqC,EAJf,QASoBhC,GATpB,iCAU+BgC,EAASC,OAVxC,OAUkBN,EAVlB,OAYYV,EAAWU,EAAKA,MAChBZ,EAAc,CAACY,EAAKE,eACpBV,EAAaQ,EAAKO,OAClBT,EAAYE,EAAKQ,eACjBT,EAAYC,GAhBxB,mFAqBe,CACHS,KAAI,OAtBhB,2DAvBmB,+BAkDJC,IAlDI,2EAkDnB,gCAAAjD,EAAA,sEAEQiC,GAAkB,GAElBR,EAAYW,GAJpB,SAM+B9B,MAAM8B,EAAS,CAClC7B,OAAQ,QAPpB,YAMcqC,EANd,QAUoBhC,GAVpB,iCAW+BgC,EAASC,OAXxC,OAWkBN,EAXlB,OAaYV,EAAW,YAAID,EAAQsB,OAAOX,EAAKA,QACnCF,EAAYE,EAAKQ,eACjBpB,EAAc,GAAD,mBAAKD,GAAL,CAAiBa,EAAKE,gBAE7BU,EAAcZ,EAAKO,MAAMM,KAAI,SAACC,GAChC,IAAI,IAAIC,EAAE,EAAGA,EAAE5B,EAAWtB,OAAQkD,IAC3BD,EAAQ5E,OAASiD,EAAW4B,KAC3BD,EAAQrF,QAAS,GAGzB,OAAOqF,KAGXtB,EAAaoB,GACbb,EAAYC,GACZN,GAAkB,GA5B9B,0DAgCQnB,QAAQC,MAAM,kCAAd,MAhCR,2DAlDmB,sBAuFnBwC,qBAAW,WACPb,EAAWzD,EAAIC,aAChB,IAIH,IAAMsE,EAAc5B,EAAQwB,KAAI,SAACK,GAE7B,OACI,cAAC,EAAD,CAEIjG,KAAQiG,EAAOjG,KACfE,KAAQ+F,EAAO/F,KACfgG,WAAcD,EAAOC,WACrBtG,WAAcqG,EAAOrG,YAJdqG,EAAOE,OAWpBC,EAAsB9B,EAAUsB,KAAI,SAACS,GACvC,OACI,cAAC,EAAD,CAEI7F,OAAU6F,EAAK7F,OACfS,MAASoF,EAAKpF,MACdF,QAAWsF,EAAKlB,IAChBnE,SAAYkE,GAJLmB,EAAKpF,UA2BxB,OACI,sBAAKpB,UAAWC,IAAOS,OAAvB,UAEI,oBAAIV,UAAWC,IAAO,gBAAtB,SACKkG,IAGL,qBAAKnG,UAAYC,IAAOwG,KAAxB,SAxBD9B,EACS,gDAGFA,GAAkBE,EAEpB,cAAC,EAAD,CACIpD,YAAe,SACfE,QAAW,YACXD,cAAiBkE,IAIlB,KAeP,oBAAI5F,UAAWC,IAAO,mBAAtB,SACKsG,IAGL,cAAC,EAAD,CAAa/C,UAtIrB,WACI6B,EAAWlB,UCdJuC,MAXf,WAEE,OACE,qBAAK1G,UAAWC,IAAO0G,WAAvB,SACE,qBAAK3G,UAAaC,IAAOC,UAAzB,SACI,cAAC,EAAD,SCIK0G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d61c2ca9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CommentForm_wrapper__gDS1Z\",\"input-wraper\":\"CommentForm_input-wraper__2iC1u\",\"warning\":\"CommentForm_warning__3GOBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Comment_container__37ide\",\"name\":\"Comment_name__1GXKW\",\"date\":\"Comment_date__1zdrQ\",\"comment\":\"Comment_comment__1_9rC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"PaginationButom_wraper__1IDeg\",\"button\":\"PaginationButom_button__39BPs\",\"label\":\"PaginationButom_label__2Yfv0\",\"active\":\"PaginationButom_active__8V2fY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"CommentsList_wraper__14csq\",\"pagination-list\":\"CommentsList_pagination-list__2bkIl\",\"more\":\"CommentsList_more__22UTp\",\"coments-list\":\"CommentsList_coments-list__3nUZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bacground\":\"PopUp_bacground__3sqSl\",\"container\":\"PopUp_container__3zayN\",\"close\":\"PopUp_close__1lnfy\",\"message\":\"PopUp_message__1dNS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__365rC\",\"container\":\"App_container__26Vhj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Buttom_wrapper__24A__\",\"buttom\":\"Buttom_buttom__3xX-6\"};","\nfunction dateToString(date){\n    function monthNumber(num){\n        num = num+1;\n\n        if(num<10){\n            return ('0'+num)\n        }else{\n            return num.toString(); \n        }\n    }\n\n    return `${date.getDate()}.${monthNumber(date.getMonth())}.${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\n    \n}\n\nexport default dateToString","import React from \"react\";\nimport dateToString from \"../../utils/dateToString\"\nimport styles from \"./style/Comment.module.scss\"\n\nfunction Comment(props){\n    const updatedTo = new Date(props.updated_at);\n\n    ;\n\n    return(\n        <li className= {styles.container}>\n            <h3 className = {styles.name} >{props.name}</h3>\n            <p className = {styles.comment} >{props.text}</p>\n            <span className = {styles.date} >Updated: {dateToString(updatedTo)}</span>\n        </li>\n\n    )\n}\n\nexport default Comment","function textConverter(str)\n{\n    str = str.replace(\"&laquo;\",\"Â«\" );\n    str = str.replace(\"&raquo;\", \"Â»\");\n\n    return str;\n\n}\n\nexport default textConverter","import React from \"react\";\nimport textConverter from '../../utils/textConverter'\nimport styles from './style/PaginationButom.module.scss'\n\nfunction PaginationButom(props){\n    function goToPage(e){\n        e.preventDefault();\n\n        if(isNaN(props.getPage)){\n            props.goToPage(props.getPage);\n        }\n        \n    }\n\n    return (\n        <li className={styles.wraper +' ' + ((props.active) ? styles.active : '')} >\n            <a href='#'\n                className={styles.button}\n                onClick = {goToPage} \n            >\n                <span className = {styles.label}>\n                    {(textConverter((props.label.toString())))}\n                </span>\n            </a>\n            \n        </li>\n    )\n}\n\nexport default PaginationButom","import React from \"react\";\nimport styles from './style/Buttom.module.scss'\n\nfunction Buttom(props){\n    return(\n        <div className={styles.wrapper}>\n            <button className={styles.buttom} type={props.buttomTypes} onClick={props.buttomOnclick}>\n                {props.content}\n            </button>\n        </div>\n    )\n}\n\nexport default Buttom","const API = {\n    firstPage: 'https://jordan.ashton.fashion/api/goods/30/comments',\n    sendComments: 'https://jordan.ashton.fashion/api/goods/30/comments',\n}\n\nexport default API","import React from \"react\";\nimport styles from './styles/PopUp.module.scss';\n\nfunction PopUp(props){\n    return(\n        <div className = {styles.bacground}>\n            <div className = {styles.container}>\n                <a href='#' className = {styles.close} onClick = {props.close}></a>\n                <p className = {styles.message}>{props.message}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default PopUp","import {React, useState} from \"react\";\nimport Buttom from \"../Buttom/Butom\";\nimport PopUp from \"../PopUp/PopUp\";\nimport API from '../../API/API'\nimport styles from './style/CommentForm.module.scss'\n\nfunction CommentForm(props){\n\n    const [comment, setComment] = useState({name: '',text: '' });\n    const [validateMessage, setValidateMessage] = useState({name: false, text: false});\n    const [showMesage, setShowMesage] = useState(false);\n\n    function closeMesage(){\n        setShowMesage(false);\n    }\n\n\n\n\n    async function formHangler(e){\n        try{\n            e.preventDefault()\n\n            function hideNameValidate(){\n                setValidateMessage({...validateMessage, name: false});\n            }\n\n            function hideTextValidate(){\n                setValidateMessage({...validateMessage, text: false});\n            }\n\n            function closePopUp(){\n                setShowMesage(false)\n            }\n\n            if(comment.name.length<3){\n                setValidateMessage({...validateMessage, name: true});\n                setTimeout(hideNameValidate, 10000)\n            }else if(comment.text.length<3){\n                setValidateMessage({...validateMessage, text: true});\n                setTimeout(hideTextValidate, 10000)\n            }else{\n                const response = await fetch(API.sendComments, {\n                    method: 'post',\n                    body: JSON.stringify(comment),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                })\n\n                if(response.ok){                  \n                    props.resetPage();\n                    setComment({name: '',text: '' });\n                    setShowMesage(true);\n                    setTimeout(closePopUp, 10000)\n\n                    \n                }\n\n            }\n        }\n        catch(e){\n            console.error('CommentForm function formHangler',e);\n        }\n\n\n        \n    }\n\n    const popUp = <PopUp\n            message = {'Comment posted'}\n            close = {closeMesage}\n        />\n\n    return(\n        <form onSubmit = {formHangler} className={styles.wrapper}>\n            <div className={styles['input-wraper']}>\n                <input\n                    type='text'\n                    name='yourName'\n                    placeholder = 'Your name'\n                    onChange = {(e)=>setComment({...comment, name: e.target.value})}\n                    value = {comment.name}\n                />\n                {(validateMessage.name)?<span className = {styles.warning} >There must be at least two letters.</span>:''}\n            </div>\n            <div className = {styles['input-wraper']}>\n                <textarea\n                    type='text'\n                    name='comment'\n                    placeholder = 'Write your comment'\n                    onChange = {(e)=>setComment({...comment, text: e.target.value})}\n                    value = {comment.text}\n                >\n                </textarea>\n                {(validateMessage.text)?<span className = {styles.warning} >There must be at least four letters.</span>:''}\n            </div>\n            \n            <Buttom buttomTypes = {'submit'} buttomOnclick = {formHangler} content={'Submit'}/>\n\n            {showMesage ? popUp : ''}\n\n        </form>\n    )\n}\n\nexport default CommentForm","import React, { useEffect, useState } from \"react\";\nimport Comment from \"../Comment/Comment\";\nimport PaginnationButom from '../PaginationButom/PaginationButom';\nimport Buttom from \"../Buttom/Butom\";\nimport styles from  './style/CommentsList.module.scss'; \nimport API from \"../../API/API\";\nimport CommentForm from \"../CommentForm/CommentForm\";\n\nfunction CommentsList(){\n\n    const [thisPage, setThisPage] = useState('')\n    const [activePage, setActivePage] = useState([]);\n    const [coments, setComents] = useState([]);\n    const [pageLinks, setPageLinks] = useState([]);\n    const [loaderShowMore, setLoaderShowMore] = useState(false);\n    const [showButton, setShowButton] = useState(true);\n    const [nextPage, setNextPage] = useState('');\n\n\n    function resetButton(data){\n        if(data.last_page == data.current_page){\n            setShowButton(false)\n        }else{\n            setShowButton(true)\n        }\n    }\n\n    function resetPage(){\n        updatePage(thisPage)\n    }\n\n    async function updatePage(url){\n        try {\n            setThisPage(url);\n\n            const  response = await fetch(url, {\n                method: 'get',\n            });\n\n\n            if(response.ok){\n                const data = await response.json();\n\n                setComents(data.data);\n                setActivePage([data.current_page])\n                setPageLinks(data.links);\n                setNextPage(data.next_page_url);\n                resetButton(data)\n            }\n            \n        }  \n        catch(eror){\n            return {\n                eror\n            }\n        }\n    }\n\n    async function showMore(){\n        try {\n            setLoaderShowMore(true);\n\n            setThisPage(nextPage);\n\n            const response = await fetch(nextPage,{\n                method: 'get',\n            })\n\n            if(response.ok){\n                const data = await response.json();\n\n                setComents([...coments.concat(data.data)]);\n                setNextPage(data.next_page_url);\n                setActivePage([...activePage, data.current_page]);\n\n                const newPageLink = data.links.map((element)=>{\n                    for(let i=0; i<activePage.length; i++ ){\n                        if(element.label == activePage[i]){\n                            element.active = true;\n                        }\n                    }\n                    return element\n                })\n\n                setPageLinks(newPageLink);\n                resetButton(data)\n                setLoaderShowMore(false);\n            }\n        }\n        catch(eror) {\n            console.error('CommentsList function show more',eror)\n        }\n    }\n\n   \n    useEffect( ()=>{\n        updatePage(API.firstPage);\n    }, [])\n\n    \n\n    const listComents = coments.map((coment)=>{\n\n        return(\n            <Comment\n                key = {coment.id} \n                name = {coment.name}\n                text = {coment.text}\n                created_at = {coment.created_at}\n                updated_at = {coment.updated_at}\n\n            >\n            </Comment>\n        )\n    })\n\n    const listPaginationButon = pageLinks.map((elem) =>{\n        return (\n            <PaginnationButom\n                key = {elem.label}\n                active = {elem.active}\n                label = {elem.label}\n                getPage = {elem.url}\n                goToPage = {updatePage}\n            ></PaginnationButom>\n        )\n    })\n\n    const isShowButton = function(){\n        if(loaderShowMore){\n            return (<spam>\n                Loading....\n            </spam>)\n        }else if(!loaderShowMore && showButton ){\n            return(\n                <Buttom \n                    buttomTypes = {'buttom'}\n                    content = {'Show more'}\n                    buttomOnclick = {showMore}\n                ></Buttom>\n            )\n        }else {\n            return ''\n        }\n    }\n\n    return (\n        <div className={styles.wraper}>\n\n            <ul className={styles['coments-list']}>\n                {listComents}\n            </ul>\n\n            <div className ={styles.more} >\n                {isShowButton()}\n            </div>\n\n            <ul className={styles['pagination-list']}>\n                {listPaginationButon}\n            </ul>\n\n            <CommentForm resetPage = {resetPage}/>\n        </div>\n    )\n}\n\nexport default CommentsList","import styles from './style/App.module.scss';\nimport CommentsList from '../CommentsList/CommentsList';\n\nfunction App() {\n \n  return (\n    <div className={styles.background}>\n      <div className = {styles.container} >\n          <CommentsList></CommentsList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}